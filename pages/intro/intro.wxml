<!--pages/intro/intro.wxml-->
<view class="p20">
  <view>common</view>
  <view class="ml20 mb10">common.wxss & flex.wxss & io-content.js</view>
  <view>io-content.js</view>
  <view class="ml20">封装了原生wx.request，配合每个page下的io.js使用</view>
  <view>config</view>
  <view class="ml20 mb10">配置项合集，固定参数</view>
  <view>libs</view>
  <view class="ml20 mb10">第三方库 runtime.js 为了用async 和 await</view>
  <view>每个page目录下新增 io.js 管理页面请求。</view>
  <view>
    在[页面名].js 头部添加使用
    <view class="ml20 mb10">
      <view>const app = getApp()</view>
      <view>const regeneratorRuntime = require(`${app.RUNTIME}`)</view>
      <view>import io from 'io.js'</view>
    </view>
  </view>

  <button type="primary" bindtap="goToModDemo">跳转到自定义组件demo页</button>

  <view>下面是一个自定义组件的demo</view>
  <view>我们先在 app.json 中把hello组件注册为全局组件，就可以在任何页面直接引用</view>

  <hello bindtap="outerFun" />

</view>